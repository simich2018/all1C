 Функция Печать() Экспорт
	
	ФормаПодписи = ПолучитьФорму("ФормаВыбора");
	ФормаПодписи.Открыть();

КонецФункции

Функция ПечатьДокумента(Сотрудники) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтпускаОрганизации_Т6а";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	// получаем данные для печати
	ВыборкаДляШапкиИПодвала = СформироватьЗапросДляПечати2004("ПоРеквизитамДокумента", Сотрудники).Выбрать();
	ВыборкаРаботники = СформироватьЗапросДляПечати2004("ПоТабличнойЧастиДокумента", Сотрудники).Выбрать();

	// подсчитываем количество страниц документа - для корректного разбиения на страницы
	ВсегоСтрокДокумента = ВыборкаРаботники.Количество();

	// запоминаем области макета
	Макет = ПолучитьМакет("Т6а_от_5_1_2004");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка работника
	
	//{[+](фрагмент изменен), Симаков Сергей Михайлович 17.05.2017 16:08:56
	ОбластьЛистСогл = Макет.ПолучитьОбласть("ЛистСогласования");
	
    СтруктураСУПиБУХ = ПолучитьПодписиСУПиБУХ();
	
	Если СтруктураСУПиБУХ <> Неопределено Тогда
		
		Если СтруктураСУПиБУХ.ПризнакИО_НачСУП Тогда
			ДолжнНачСуп = "И.о. начальника СУП";
		Иначе
			ДолжнНачСуп = "Начальник СУП";
		КонецЕсли; 
		
		РуководительКадровойСлужбы = ОбщегоНазначения.ФамилияИнициалыФизЛица(СтруктураСУПиБУХ.ФИОНачСУП);
		
		Если СтруктураСУПиБУХ.ПризнакИО_НачСУП Тогда
			ДолжнГлБух = "И.о. главного бухгалтера";
		Иначе
			ДолжнГлБух = "Главный бухгалтер";
		КонецЕсли; 
		
		ГлавныйБухгалтер = ОбщегоНазначения.ФамилияИнициалыФизЛица(СтруктураСУПиБУХ.ФИОБУХ);
		
	КонецЕсли; 
	//}Симаков Сергей Михайлович 17.05.2017 16:08:56 

	// массив с двумя строками - для разбиения на страницы
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	
	// выводим данные о руководителях организации
	Если ВыборкаДляШапкиИПодвала.Следующий() Тогда 
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // Шапка документа.
 		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // Для подвала
	КонецЕсли;
	
	//{[+](фрагмент изменен), Симаков Сергей Михайлович 17.05.2017 15:35:36
	Если ВыборкаРаботники.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.НомерДок = СокрЛП(СтрЗаменить(Лев(ВыборкаРаботники.Основание, Найти(ВыборкаРаботники.Основание, "от") - 1), "№", ""));
		ОбластьМакетаШапка.Параметры.ДатаДок  = Сред(ВыборкаРаботники.Основание, Найти(ВыборкаРаботники.Основание, "от") + 3, 10);
		
		ВыборкаРаботники.Сбросить();	
	КонецЕсли; 
	//}Симаков Сергей Михайлович 17.05.2017 15:35:36 

	// Начинаем формировать выходной документ
	ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
	ВыведеноСтрок = 0;

	// выводим строки по работникам
	Пока ВыборкаРаботники.Следующий() Цикл

		// Данные по работнику
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		
		РезультатСклонения = "";
		Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ВыборкаРаботники.Работник, 3,ВыборкаРаботники.ФизЛицоПол, РезультатСклонения) Тогда
			ОбластьМакета.Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ОбластьМакета.Параметры.Продолжительность = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаНачала) И ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончания), ВыборкаРаботники.Продолжительность, "");
		ОбластьМакета.Параметры.ПродолжительностьВсего = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаНачалаВсего) И ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончанияВсего), ВыборкаРаботники.ПродолжительностьВсего, "");
		ОбластьМакета.Параметры.ВидДопОтпуска = Строка(ВыборкаРаботники.ВидДопОтпуска) + ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаПоДоп), "; " + (ВыборкаРаботники.ПродолжительностьВсего - ВыборкаРаботники.Продолжительность), "");

		//уберем из табельного номера префикс
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
		
		ОбластьМакета.Параметры.ПодразделениеРаботника = ВыборкаРаботники.ПодразделениеРаботника.ПолноеНаименование();
		
		// разбиение на страницы
		ВыведеноСтрок = ВыведеноСтрок + 1;

		// Проверим, уместится ли строка на странице или надо открывать новую страницу
		ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
			ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
			ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиПодвалЛиста Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
	Для Сч = 1 По ОбластьМакета.Параметры.Количество() Цикл
		ОбластьМакета.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	ОбластьМакета.Параметры.Работник = " " + Символы.ПС + " ";
	Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти, Ложь) Цикл
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	//{[+](фрагмент изменен), Симаков Сергей Михайлович 17.05.2017 16:09:58
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	СтруктураПодписиНачОтд = ПолучитьПодписиНачОтдела(ВыборкаРаботники.ПодразделениеРаботника);
	
	ФИОНачОтдела = "";
	ДолжНачОтд = "";
	
	Если СтруктураПодписиНачОтд <> Неопределено Тогда
		
		Если СтруктураПодписиНачОтд.ПризнакИО_НачОтд Тогда
			
			Для каждого Элемент Из ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СтруктураПодписиНачОтд.ДолжнНачОтд, " ") Цикл
				ВремДолж = "";
				УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), Элемент, 2,, ВремДолж);
				ДолжНачОтд = ДолжНачОтд + " " + ВремДолж;
			КонецЦикла; 
			
			ДолжНачОтд = "И.о. " + НРег(ДолжНачОтд);
		Иначе
			ДолжНачОтд = СтруктураПодписиНачОтд.ДолжнНачОтд;
		КонецЕсли;
		
		ФИОНачОтдела = ОбщегоНазначения.ФамилияИнициалыФизЛица(СтруктураПодписиНачОтд.ФИОНачОтд);
		
	КонецЕсли; 
	
	ОбластьЛистСогл.Параметры.ДолжнНачСуп				 = ДолжнНачСуп;
	ОбластьЛистСогл.Параметры.ДолжНачОтд				 = ДолжНачОтд;
	ОбластьЛистСогл.Параметры.ДолжнГлБух				 = ДолжнГлБух;
	ОбластьЛистСогл.Параметры.РуководительКадровойСлужбы = РуководительКадровойСлужбы;
	ОбластьЛистСогл.Параметры.ФИОНачОтдела				 = ФИОНачОтдела;
	ОбластьЛистСогл.Параметры.ГлавныйБухгалтер			 = ГлавныйБухгалтер;
	
	ОбластьЛистСогл.Параметры.Исполнитель = ОбщегоНазначения.ФамилияИнициалыФизЛица(глЗначениеПеременной("глТекущийПользователь").ФизЛицо);
	
	ТабДокумент.Вывести(ОбластьЛистСогл);
	
	//}Симаков Сергей Михайлович 17.05.2017 16:09:58 
	
	// выводим предварительно подготовленный Подвал документа.
	ТабДокумент.Вывести(ОбластьМакетаПодвал);

	//Возврат ТабДокумент;
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.Показать();
	
КонецФункции
			   
// Формирует запрос по документу и связанным регистрам сведений
//
// Параметры: 
//  Режим - строка, может принимать значения:
//			"ПоРеквизитамДокумента"
//			"ПоТабличнойЧастиДокумента"
//
// Возвращаемое значение:
//  Результат запроса с данными об организации или о работниках из табличной части
//
Функция СформироватьЗапросДляПечати2004(Режим, Сотрудники)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ДатаДокумента",	 СсылкаНаОбъект.Дата);
	//{[+](фрагмент изменен), Симаков Сергей Михайлович 17.05.2017 15:59:08
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	//}Симаков Сергей Михайлович 17.05.2017 15:59:08 

	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница",СсылкаНаОбъект.Организация);
		
		Запрос.Текст = ФормированиеПечатныхФормЗК.ПолучитьТекстЗапросаПоОтветственнымЛицам(
			"ДатаДокумента",
			"ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
			|И СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтпускаОрганизаций.Дата КАК ДатаДок,
		|	ОтпускаОрганизаций.Номер КАК НомерДок,
		|	ОтпускаОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
		|	ОтпускаОрганизаций.Организация.КодПоОКПО КАК КодПоОКПО,
		|	ОтветственныеЛицаОрганизаций.Должность КАК ДолжностьРуководителя,
		|	ОтветственныеЛицаОрганизаций.НаименованиеОтветственногоЛица КАК ФИОРуководителя,
		|	ОтветственныеЛицаОрганизаций.ОтветственноеЛицо,
		|	ОтпускаОрганизаций.Организация.Префикс
		|ИЗ
		|	Документ.ОтпускаОрганизаций КАК ОтпускаОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОбОтветственномЛице КАК ОтветственныеЛицаОрганизаций
		|		ПО ОтпускаОрганизаций.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
		|ГДЕ
		|	ОтпускаОрганизаций.Ссылка = &ТекущийДокумент";

	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда

		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОтпускаОрганизацийРаботникиОрганизации.Ссылка,
		|	ОтпускаОрганизацийРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|	ОтпускаОрганизацийРаботникиОрганизации.Сотрудник КАК Сотрудник,
		|	ОтпускаОрганизацийРаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
		|	ОтпускаОрганизацийРаботникиОрганизации.Сотрудник.Код,
		|	ОтпускаОрганизацийРаботникиОрганизации.Сотрудник.Наименование,
		|	ОтпускаОрганизацийРаботникиОрганизации.ОсвобождатьСтавку,
		|	ОтпускаОрганизацийРаботникиОрганизации.ДатаНачала,
		|	ОтпускаОрганизацийРаботникиОрганизации.ДатаОкончания,
		|	ОтпускаОрганизацийРаботникиОрганизации.ПричинаОтсутствия,
		|	ОтпускаОрганизацийРаботникиОрганизации.ВидДополнительногоОтпуска,
		|	ОтпускаОрганизацийРаботникиОрганизации.РабочийГодС,
		|	ОтпускаОрганизацийРаботникиОрганизации.РабочийГодПо,
		|	ОтпускаОрганизацийРаботникиОрганизации.ДатаНачалаДоп,
		|	ОтпускаОрганизацийРаботникиОрганизации.Основание,
		|	ОтпускаОрганизацийРаботникиОрганизации.НапомнитьПоЗавершении
		|ПОМЕСТИТЬ ВТДанныеДокумента
		|ИЗ
		|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацийРаботникиОрганизации
		|ГДЕ
		|	ОтпускаОрганизацийРаботникиОрганизации.Ссылка = &ТекущийДокумент
		//{[+](фрагмент изменен), Симаков Сергей Михайлович 17.05.2017 15:57:47
		|	И (НЕ ОтпускаОрганизацийРаботникиОрганизации.Сторно)" + ?(Сотрудники.Количество() >  0, "
		|   И (ОтпускаОрганизацийРаботникиОрганизации.Сотрудник В (&Сотрудники))", "") + "
		//}Симаков Сергей Михайлович 17.05.2017 15:57:47 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДат.НомерСтроки КАК НомерСтроки,
		|	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизацииНаименование,
		|	РаботникиОрганизации.Должность.Наименование КАК ДолжностьНаименование,
		|	РаботникиОрганизации.ПодразделениеОрганизацииЗавершения КАК ПодразделениеОрганизацииЗавершенияНаименование,
		|	РаботникиОрганизации.ДолжностьЗавершения.Наименование КАК ДолжностьЗавершенияНаименование,
		|	РаботникиОрганизации.ПериодЗавершения КАК ПериодЗавершения
		|ПОМЕСТИТЬ ВТДанныеОРаботникахОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		РаботникиВнутри.Сотрудник КАК Сотрудник,
		|		МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения,
		|		ОтпускаОрганизаций.НомерСтроки КАК НомерСтроки
		|	ИЗ
		|		РегистрСведений.РаботникиОрганизаций КАК РаботникиВнутри
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДокумента КАК ОтпускаОрганизаций
		|			ПО РаботникиВнутри.Сотрудник = ОтпускаОрганизаций.Сотрудник
		|				И РаботникиВнутри.Период <= ОтпускаОрганизаций.ДатаНачала
		|	ГДЕ
		|		РаботникиВнутри.Сотрудник В
		|				(ВЫБРАТЬ
		|					ОтпускаОрганизацииРаботники.Сотрудник
		|				ИЗ
		|					ВТДанныеДокумента КАК ОтпускаОрганизацииРаботники)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ОтпускаОрганизаций.НомерСтроки,
		|		РаботникиВнутри.Сотрудник) КАК СписокДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период
		|			И СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ПОМЕСТИТЬ ВТФИОФизЛиц
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|			&ДатаДокумента,
		|			ФизЛицо В
		|				(ВЫБРАТЬ
		|					ОтпускаОрганизацииРаботники.ФизЛицо
		|				ИЗ
		|					ВТДанныеДокумента КАК ОтпускаОрганизацииРаботники)) КАК ФИОФизЛицСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтпускаОрганизацииРаботники.НомерСтроки КАК НомерСтроки,
		|	СУММА(РегламентированныйПроизводственныйКалендарь.КалендарныеДни) КАК КалендарныеДни
		|ПОМЕСТИТЬ ВТДниОсновногоОтпуска
		|ИЗ
		|	ВТДанныеДокумента КАК ОтпускаОрганизацииРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|		ПО (РегламентированныйПроизводственныйКалендарь.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник))
		|			И (РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаОрганизацииРаботники.ДатаНачала И ВЫБОР
		|				КОГДА ОтпускаОрганизацииРаботники.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ОтпускаОрганизацииРаботники.ДатаОкончания
		|				ИНАЧЕ ДОБАВИТЬКДАТЕ(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДЕНЬ, -1)
		|			КОНЕЦ)
		|ГДЕ
		|	ОтпускаОрганизацииРаботники.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтпускаОрганизацииРаботники.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтпускаОрганизацииРаботники.НомерСтроки КАК НомерСтроки,
		|	СУММА(РегламентированныйПроизводственныйКалендарь.КалендарныеДни) КАК КалендарныеДни
		|ПОМЕСТИТЬ ВТДниВсего
		|ИЗ
		|	ВТДанныеДокумента КАК ОтпускаОрганизацииРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|		ПО (РегламентированныйПроизводственныйКалендарь.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник))
		|			И (РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаОрганизацииРаботники.ДатаНачала И ОтпускаОрганизацииРаботники.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтпускаОрганизацииРаботники.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество, ОтпускаОрганизацииРаботники.СотрудникНаименование) КАК Работник,
		|	ОтпускаОрганизацииРаботники.ФизЛицо.Пол,
		|	ВЫБОР
		|		КОГДА ДанныеОРаботникахОрганизации.ПериодЗавершения <= ОтпускаОрганизацииРаботники.ДатаНачала
		|				И ДанныеОРаботникахОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ДанныеОРаботникахОрганизации.ПодразделениеОрганизацииЗавершенияНаименование
		|		ИНАЧЕ ДанныеОРаботникахОрганизации.ПодразделениеОрганизацииНаименование
		|	КОНЕЦ КАК ПодразделениеРаботника,
		|	ВЫБОР
		|		КОГДА ДанныеОРаботникахОрганизации.ПериодЗавершения <= ОтпускаОрганизацииРаботники.ДатаНачала
		|				И ДанныеОРаботникахОрганизации.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ДанныеОРаботникахОрганизации.ДолжностьЗавершенияНаименование
		|		ИНАЧЕ ДанныеОРаботникахОрганизации.ДолжностьНаименование
		|	КОНЕЦ КАК Должность,
		|	ОтпускаОрганизацииРаботники.НомерСтроки КАК НомерСтроки,
		|	ОтпускаОрганизацииРаботники.ДатаНачала КАК ДатаНачалаВсего,
		|	ОтпускаОрганизацииРаботники.ДатаОкончания КАК ДатаОкончанияВсего,
		|	ОтпускаОрганизацииРаботники.РабочийГодПо,
		|	ОтпускаОрганизацииРаботники.РабочийГодС,
		|	ОтпускаОрганизацииРаботники.ПричинаОтсутствия,
		|	ОтпускаОрганизацииРаботники.Основание,
		|	ВЫБОР
		|		КОГДА ОтпускаОрганизацииРаботники.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
		|			ТОГДА ОтпускаОрганизацииРаботники.ВидДополнительногоОтпуска.Наименование
		|		КОГДА ОтпускаОрганизацииРаботники.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускУчебный)
		|			ТОГДА ""Дополнительный отпуск в связи с обучением с сохранением среднего заработка работникам, совмещающим работу с обучением""
		|		ИНАЧЕ ОтпускаОрганизацииРаботники.ПричинаОтсутствия
		|	КОНЕЦ КАК ВидДопОтпуска,
		|	ВЫБОР
		|		КОГДА ОтпускаОрганизацииРаботники.ВидДополнительногоОтпуска <> ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
		|			ТОГДА ОтпускаОрганизацииРаботники.ДатаНачалаДоп
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ОтпускаОрганизацииРаботники.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
		|					ТОГДА """"
		|				ИНАЧЕ ОтпускаОрганизацииРаботники.ДатаНачала
		|			КОНЕЦ
		|	КОНЕЦ КАК ДатаСДоп,
		|	ВЫБОР
		|		КОГДА ОтпускаОрганизацииРаботники.ПричинаОтсутствия <> ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
		|				ИЛИ ОтпускаОрганизацииРаботники.ВидДополнительногоОтпуска <> ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
		|			ТОГДА ОтпускаОрганизацииРаботники.ДатаОкончания
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ДатаПоДоп,
		|	ВЫБОР
		|		КОГДА ОтпускаОрганизацииРаботники.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтпускаОрганизацииРаботники.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
		|							ИЛИ ОтпускаОрганизацииРаботники.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|						ТОГДА ОтпускаОрганизацииРаботники.ДатаНачала
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ОтпускаОрганизацииРаботники.ДатаНачала < ОтпускаОрганизацииРаботники.ДатаНачалаДоп
		|								ТОГДА ОтпускаОрганизацииРаботники.ДатаНачала
		|							ИНАЧЕ """"
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ДатаНачала,
		|	ВЫБОР
		|		КОГДА ОтпускаОрганизацииРаботники.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
		|			ТОГДА ВЫБОР
		|					КОГДА ОтпускаОрганизацииРаботники.ВидДополнительногоОтпуска = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
		|							ИЛИ ОтпускаОрганизацииРаботники.ДатаНачалаДоп = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|						ТОГДА ОтпускаОрганизацииРаботники.ДатаОкончания
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ОтпускаОрганизацииРаботники.ДатаНачала < ОтпускаОрганизацииРаботники.ДатаНачалаДоп
		|								ТОГДА ДОБАВИТЬКДАТЕ(ОтпускаОрганизацииРаботники.ДатаНачалаДоп, ДЕНЬ, -1)
		|							ИНАЧЕ """"
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ДатаОкончания,
		|	ВЫБОР
		|		КОГДА ОтпускаОрганизацииРаботники.ПричинаОтсутствия <> ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
		|			ТОГДА РАЗНОСТЬДАТ(ОтпускаОрганизацииРаботники.ДатаНачала, ОтпускаОрганизацииРаботники.ДатаОкончания, ДЕНЬ) + 1
		|		ИНАЧЕ ЕСТЬNULL(КалендарьДнейВсего.КалендарныеДни, 0)
		|	КОНЕЦ КАК ПродолжительностьВсего,
		|	ВЫБОР
		|		КОГДА ОтпускаОрганизацииРаботники.ПричинаОтсутствия <> ЗНАЧЕНИЕ(Перечисление.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный)
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(КалендарьОсновногоОтпуска.КалендарныеДни, 0)
		|	КОНЕЦ КАК Продолжительность,
		|	ОтпускаОрганизацииРаботники.СотрудникКод КАК ТабельныйНомер
		|ИЗ
		|	ВТДанныеДокумента КАК ОтпускаОрганизацииРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОРаботникахОрганизации КАК ДанныеОРаботникахОрганизации
		|		ПО ОтпускаОрганизацииРаботники.НомерСтроки = ДанныеОРаботникахОрганизации.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДниВсего КАК КалендарьДнейВсего
		|		ПО ОтпускаОрганизацииРаботники.НомерСтроки = КалендарьДнейВсего.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДниОсновногоОтпуска КАК КалендарьОсновногоОтпуска
		|		ПО ОтпускаОрганизацииРаботники.НомерСтроки = КалендарьОсновногоОтпуска.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОФизЛиц КАК ФИОФизЛиц
		|		ПО ОтпускаОрганизацииРаботники.ФизЛицо = ФИОФизЛиц.ФизЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Иначе
		Возврат Неопределено
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

Функция ПолучитьПодписиСУПиБУХ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение КАК Значение,
	|	""ДолжнНачСУП"" КАК НачСтрока
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодрСУП
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоДолж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение,
	|	""ДолжнБУХ""
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодрБУХ
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоДолж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение,
	|	""ФИОНачСУП""
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодрСУП
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоФИО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение,
	|	""ФИОБУХ""
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодрБУХ
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоФИО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение,
	|	""ПризнакИО_НачСУП""
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодрСУП
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоПризнакИО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение,
	|	""ПризнакИО_БУХ""
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодрБУХ
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоПризнакИО";
	
	Запрос.УстановитьПараметр("ОбъектПодрСУП", Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000076"));//Служба управления персоналом
	Запрос.УстановитьПараметр("ОбъектПодрБУХ", Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000089"));//Бухгалтерия
	Запрос.УстановитьПараметр("СвойствоДолж", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00000000008"));//Должность начальника
	Запрос.УстановитьПараметр("СвойствоФИО", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00000000010"));//Начальник отдела
	Запрос.УстановитьПараметр("СвойствоПризнакИО", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00000000009"));//И.о. начальника отдела
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ = РезультатЗапроса.Выгрузить();
	
	СтруктураПодписей = Новый Структура;
	
	Для каждого Строка Из ТЗ Цикл
		СтруктураПодписей.Вставить(Строка.НачСтрока, Строка.Значение);
	КонецЦикла; 
	
	Если СтруктураПодписей.Количество() > 0 Тогда
		Возврат СтруктураПодписей;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 

КонецФункции			   
			   
Функция ПолучитьПодписиНачОтдела(Подр)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение КАК Значение,
	|	""ДолжнНачОтд"" КАК НачСтрока
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодр
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоДолж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение,
	|	""ПризнакИО_НачОтд""
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодр
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоПризнакИО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение,
	|	""ФИОНачОтд""
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &ОбъектПодр
	|	И ЗначенияСвойствОбъектов.Свойство = &СвойствоФИО";
	
	Запрос.УстановитьПараметр("ОбъектПодр", Подр);
	Запрос.УстановитьПараметр("СвойствоДолж", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00000000008"));//Должность начальника
	Запрос.УстановитьПараметр("СвойствоФИО", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00000000010"));//Начальник отдела
	Запрос.УстановитьПараметр("СвойствоПризнакИО", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00000000009"));//И.о. начальника отдела
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ = РезультатЗапроса.Выгрузить();
	
	СтруктураПодписей = Новый Структура;
	
	Для каждого Строка Из ТЗ Цикл
		СтруктураПодписей.Вставить(Строка.НачСтрока, Строка.Значение);
	КонецЦикла; 
	
	Если СтруктураПодписей.Количество() > 0 Тогда
		Возврат СтруктураПодписей;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 

КонецФункции			   
	   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   